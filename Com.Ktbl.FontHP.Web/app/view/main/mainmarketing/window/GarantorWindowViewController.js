/*
 * File: app/view/main/mainmarketing/window/GarantorWindowViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('FrontHPApp.view.main.mainmarketing.window.GarantorWindowViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.mainmainmarketingwindowgarantorwindow',

    onSaveAddressClick: function(button, e, eOpts) {
        Ext.widget("frmcusaddress").show();
    },

    onSaveAddressClick1: function(button, e, eOpts) {
        Ext.widget("mainmainmarketingwindowcommonpopuppopupcusaddress").show();
    },

    onSaveCardClick: function(button, e, eOpts) {
        Ext.widget("mainmainmarketingwindowcommonpopuppopuptypecard").show();
    },

    onEditGridClick: function(button, e, eOpts) {

    },

    onDeleteGridClick: function(button, e, eOpts) {
        var view = this.getView(),
            GridGarantor = view.down("#GridGarantor"),
            store = GridGarantor.getStore(),
            selectRecord = GridGarantor.getSelection(),
            CheckCountSelect = selectRecord.length;

        if (CheckCountSelect > 0)
        {
            Ext.MessageBox.confirm("Confirm","คุณต้องการที่จะลบรายการใช่หรือไม่?",function(btn){

                if(btn == 'yes'){

                    for(i=0;i<CheckCountSelect;i++){

                        store.remove(selectRecord[i]);

                    }
                }

            },this);

        }
        else
        {

        }
    },

    onGridGarantorItemDblClick: function(dataview, record, item, index, e, eOpts) {
        var store = dataview.up().getStore();
        console.log(dataview);

        Ext.MessageBox.confirm("Confirm","คุณต้องการที่จะยกเลิก"+record.get("RequestNo")+" ใช่หรือไม่?",function(btn){

            if(btn == 'yes'){

                store.remove(record);

                Ext.MessageBox.alert("Status",record.get("RequestNo") );
            }else{
                Ext.MessageBox.alert("WTF","WTF!!!" );
            }

        },this);
    },

    // [20150817] p2p  Add by even OccupationCatelogy 
    onOccupationCatelogyChange: function (field, newValue, oldValue, eOpts) {
    var me = this,
        refs = me.getReferences(),
        cboccupationcatelogy = refs.occupationcatelogy,
        cboccupationGroup = refs.occupationGroup,
        cboccupationcareer = refs.occupationcareer;
    cbposition = refs.position;

        // Clear selected series value
    if (oldValue != null) {
        cboccupationGroup.setValue(""),
        cboccupationcareer.setValue("");
        cbposition.setValue("");
    }
        
    var store = cboccupationGroup.getStore();
    store.getProxy().setExtraParam('occupationcatelogyid', newValue);
    store.load();

},

onOccupationGroupChange: function (field, newValue, oldValue, eOpts) {
    var me = this,
          refs = me.getReferences(),
          cboccupationcatelogy = refs.occupationcatelogy,
          cboccupationGroup = refs.occupationGroup,
          cboccupationcareer = refs.occupationcareer;
    cbposition = refs.position;

    // Clear selected series value
    if (oldValue != null) {
        cboccupationcareer.setValue("");
        cbposition.setValue("");
    }

    var store = cboccupationcareer.getStore();
    store.getProxy().setExtraParam('occupationgroupid', newValue);
    store.load();
},

onOccupationCareerChange: function (field, newValue, oldValue, eOpts) {
    var me = this,
          refs = me.getReferences(),
          cboccupationcatelogy = refs.occupationcatelogy,
          cboccupationGroup = refs.occupationGroup,
          cboccupationcareer = refs.occupationcareer;
    cbposition = refs.position;

    // Clear selected series value
    if (oldValue != null) {
        cbposition.setValue("");
    }

    var store = cbposition.getStore();
    store.getProxy().setExtraParam('occupationcareerid', newValue);
    store.load();
}

});
