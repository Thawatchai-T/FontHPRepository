/*
 * File: app/view/main/mainmarketing/MarketingTabViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('FrontHPApp.view.main.mainmarketing.MarketingTabViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.mainmainmarketingmarketingtab',

    onFindRequestNOClick: function(button, e, eOpts) {
        var me = this.getView();
        txtdateFrom = me.down('[name=StartDate]').getValue();
        txtdateTo = me.down('[name=Enddate]').getValue();
        //txtrequestNo = me.down('[name=txtrequestno]').getValue();
        //console.log(Ext.Date.format(txtdateFrom, 'd/m/Y'));
        //console.log(txtrequestNo);
      
        var form = me.down('form').getForm();
        if (form.isValid()) {
            form.submit({
                url: 'api/marketing/SearchMainRequest',
                submitEmptyText:false,
                //params: {
                //    StartDate: Ext.Date.format(txtdateFrom, 'd/m/Y'),
                //    Enddate:   Ext.Date.format(txtdateTo, 'd/m/Y'),
                //    RequestNo: me.down('[name=RequestNo]').getValue(),
                //    StatusRequest: me.down('[name=StatusRequest]').getValue(),
                //    CitizenID: me.down('[name=CitizenID]').getValue(),
                //    Cusname: me.down('[name=Cusname]').getValue(),
                //    Branch: me.down('[name=Branch]').getValue(),






                //},
                success: function (form, action) {
                    console.log(action);
                    var grid = me.down('grid'),
                        store = grid.getStore();

                    //store.getProxy().extraParams.obj = action.result;
                    var records = Ext.create('model.requestmodel', action.result);
                    store.loadRecords(records);
                    grid.view.refresh();
                },
                failure: function (form, action) {
                    console.log(action);
                    var grid = me.down('grid'),
                        store = grid.getStore();

                    //store.getProxy().extraParams.obj = action.result;
                    var records = Ext.create('model.requestmodel', action.result);
                    console.log(records);
                    store.loadRecords(action.result,true);
                    grid.view.refresh();
                   // Ext.Msg.alert('Failed', action.result.msg);
                }
            });
        }
    },

    onClearGridClick: function(button, e, eOpts) {
        var me = this.getView(),
            form = me.down('form');
        paging = me.down('pagingtoolbar');
        form.reset();
        paging.moveFirst();

        //console.log(form);




    },

    onSaveClick: function(button, e, eOpts) {
        Ext.widget('windowmainapp').show();
    },

    onEditClick: function(button, e, eOpts) {
        Ext.widget('windowmainapp').show();
    },

    onDeleteClick: function(button, e, eOpts) {
        Ext.MessageBox.show({
            title: 'Flag Cancel',
            msg: 'เหตุผล Flag Cancel',
            width:300,
            buttons: Ext.MessageBox.OKCANCEL,
            multiline: true,
            scope: this,
            fn: this.showResultText,
            animateTarget: button
        });
    },

    onDetaillItemDblClick: function(dataview, record, item, index, e, eOpts) {
        Ext.widget('windowmainapp').show();
    }

});
