/*
 * File: app/view/main/maincheckdoc/CheckDocumentTabViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('FrontHPApp.view.main.maincheckdoc.CheckDocumentTabViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.mainmaincheckdoccheckdocumenttab',
    //p2p 20150910
    onFindClick: function(button, e, eOpts) {
       
        var me = this,
           views = this.getView(),
           form = views.down('form').getForm(),
           store = views.down('grid').getStore();

        store.getProxy().setExtraParam('startdate', form.findField('QStartDate').getValue());
        store.getProxy().setExtraParam('enddate', form.findField('QEnddate').getValue());
        store.getProxy().setExtraParam('cusname', form.findField('QCusname').getValue());
        store.getProxy().setExtraParam('statusrequest', form.findField('QStatusRequest').getValue());
        store.getProxy().setExtraParam('requestno', form.findField('QRequestNo').getValue());
        store.getProxy().setExtraParam('citizenid', form.findField('QCitizenID').getValue());
        store.getProxy().setExtraParam('branch', form.findField('QBranch').getValue());
        store.load();
    },

    onClearClick: function(button, e, eOpts) {
        //var me = this.getView(),
        //    form = me.down('form');
        //paging = me.down('pagingtoolbar');
        //form.reset();
        //paging.moveFirst();
        var me = this.getView(),
          form = me.down('form');

        paging = me.down('pagingtoolbar'),
        store = paging.getStore();
        store.getProxy().extraParams = {};
        form.reset();
        store.load();
    },

    onGridpanelSelectionChange: function(model, selected, eOpts) {
        var me = this.getView(),
            form = me.down("#form2");

        console.log(selected);
        form.loadRecord(selected[0]);
    },

    onInsertDocClick: function(button, e, eOpts) {
        var me = this.getView();
        form = me.down('#form2').getForm();
        var requestNo = form.findField("RequestNo").getValue();
        console.log(requestNo);
        Ext.widget("tab2windowfrmbrowsefilecheck").show();
    },

    onSaveClick: function(button, e, eOpts) {
        var me = this.getView(),
         form = me.down('#form2').getForm();
        console.log(form);
        if (form.isValid()) {
            form.submit({
                clientValidation: true,
                url: 'api/CheckDocument/Insert',
                success: function (form, action) {
                    Ext.Msg.alert('Success', 'บันทึกข้อมูลเรียบร้อย');
                    me.down('grid').getStore().load();
                },
                failure: function (form, action) {
                    Ext.Msg.alert('Fail', 'ไม่สามารถบันทึกข้อมูลได้');
                }

            });
        } else {
            Ext.Msg.alert('Invalid Data', 'Please correct form errors.')
        }
    },

    onCancelClick: function(button, e, eOpts) {
        var me = this.getView(),
            grid = me.down('gridpanel'),
            record = grid.getSelection()[0],
            form = me.down('#form2');
        form.reset();
        console.log(record.get('IdApprove'));
        form.loadRecord(record);

    }

});
